<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jr.cloud.mapper.UploadHistoryMapper">
  <resultMap id="BaseResultMap" type="com.jr.cloud.entity.UploadHistory">
    <id column="upload_id" jdbcType="INTEGER" property="uploadId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="save_path" jdbcType="VARCHAR" property="savePath" />
    <result column="file_size" jdbcType="BIGINT" property="fileSize" />
    <result column="upload_date" jdbcType="TIMESTAMP" property="uploadDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    upload_id, user_id, file_name, save_path, file_size, upload_date
  </sql>
  <select id="selectByExample" parameterType="com.jr.cloud.entity.UploadHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from upload_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from upload_history
    where upload_id = #{uploadId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from upload_history
    where upload_id = #{uploadId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jr.cloud.entity.UploadHistoryExample">
    delete from upload_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jr.cloud.entity.UploadHistory">
    insert into upload_history (upload_id, user_id, file_name, 
      save_path, file_size, upload_date
      )
    values (#{uploadId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR}, 
      #{savePath,jdbcType=VARCHAR}, #{fileSize,jdbcType=BIGINT}, #{uploadDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jr.cloud.entity.UploadHistory">
    insert into upload_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uploadId != null">
        upload_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="savePath != null">
        save_path,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="uploadDate != null">
        upload_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uploadId != null">
        #{uploadId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="savePath != null">
        #{savePath,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="uploadDate != null">
        #{uploadDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jr.cloud.entity.UploadHistoryExample" resultType="java.lang.Integer">
    select count(*) from upload_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update upload_history
    <set>
      <if test="record.uploadId != null">
        upload_id = #{record.uploadId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.savePath != null">
        save_path = #{record.savePath,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSize != null">
        file_size = #{record.fileSize,jdbcType=BIGINT},
      </if>
      <if test="record.uploadDate != null">
        upload_date = #{record.uploadDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update upload_history
    set upload_id = #{record.uploadId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      save_path = #{record.savePath,jdbcType=VARCHAR},
      file_size = #{record.fileSize,jdbcType=BIGINT},
      upload_date = #{record.uploadDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jr.cloud.entity.UploadHistory">
    update upload_history
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="savePath != null">
        save_path = #{savePath,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="uploadDate != null">
        upload_date = #{uploadDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where upload_id = #{uploadId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jr.cloud.entity.UploadHistory">
    update upload_history
    set user_id = #{userId,jdbcType=INTEGER},
      file_name = #{fileName,jdbcType=VARCHAR},
      save_path = #{savePath,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=BIGINT},
      upload_date = #{uploadDate,jdbcType=TIMESTAMP}
    where upload_id = #{uploadId,jdbcType=INTEGER}
  </update>
</mapper>